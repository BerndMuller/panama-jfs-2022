// Generated by jextract

package unistd;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$17 {

    static final FunctionDescriptor getpagesize$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle getpagesize$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "getpagesize",
        "()I",
        constants$17.getpagesize$FUNC, false
    );
    static final FunctionDescriptor getdtablesize$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle getdtablesize$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "getdtablesize",
        "()I",
        constants$17.getdtablesize$FUNC, false
    );
    static final FunctionDescriptor truncate$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle truncate$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "truncate",
        "(Ljdk/incubator/foreign/MemoryAddress;J)I",
        constants$17.truncate$FUNC, false
    );
    static final FunctionDescriptor ftruncate$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_LONG
    );
    static final MethodHandle ftruncate$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "ftruncate",
        "(IJ)I",
        constants$17.ftruncate$FUNC, false
    );
    static final FunctionDescriptor brk$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle brk$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "brk",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$17.brk$FUNC, false
    );
    static final FunctionDescriptor sbrk$FUNC = FunctionDescriptor.of(C_POINTER,
        C_LONG
    );
    static final MethodHandle sbrk$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "sbrk",
        "(J)Ljdk/incubator/foreign/MemoryAddress;",
        constants$17.sbrk$FUNC, false
    );
}


