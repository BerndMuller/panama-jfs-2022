// Generated by jextract

package unistd;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$16 {

    static final FunctionDescriptor daemon$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle daemon$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "daemon",
        "(II)I",
        constants$16.daemon$FUNC, false
    );
    static final FunctionDescriptor chroot$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle chroot$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "chroot",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$16.chroot$FUNC, false
    );
    static final FunctionDescriptor getpass$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle getpass$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "getpass",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$16.getpass$FUNC, false
    );
    static final FunctionDescriptor fsync$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle fsync$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "fsync",
        "(I)I",
        constants$16.fsync$FUNC, false
    );
    static final FunctionDescriptor gethostid$FUNC = FunctionDescriptor.of(C_LONG);
    static final MethodHandle gethostid$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "gethostid",
        "()J",
        constants$16.gethostid$FUNC, false
    );
    static final FunctionDescriptor sync$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle sync$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "sync",
        "()V",
        constants$16.sync$FUNC, false
    );
}


