// Generated by jextract

package unistd;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$9 {

    static final FunctionDescriptor setreuid$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle setreuid$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "setreuid",
        "(II)I",
        constants$9.setreuid$FUNC, false
    );
    static final FunctionDescriptor seteuid$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle seteuid$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "seteuid",
        "(I)I",
        constants$9.seteuid$FUNC, false
    );
    static final FunctionDescriptor setgid$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle setgid$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "setgid",
        "(I)I",
        constants$9.setgid$FUNC, false
    );
    static final FunctionDescriptor setregid$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle setregid$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "setregid",
        "(II)I",
        constants$9.setregid$FUNC, false
    );
    static final FunctionDescriptor setegid$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle setegid$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "setegid",
        "(I)I",
        constants$9.setegid$FUNC, false
    );
    static final FunctionDescriptor fork$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle fork$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "fork",
        "()I",
        constants$9.fork$FUNC, false
    );
}


