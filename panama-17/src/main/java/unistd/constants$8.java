// Generated by jextract

package unistd;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$8 {

    static final FunctionDescriptor getuid$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle getuid$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "getuid",
        "()I",
        constants$8.getuid$FUNC, false
    );
    static final FunctionDescriptor geteuid$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle geteuid$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "geteuid",
        "()I",
        constants$8.geteuid$FUNC, false
    );
    static final FunctionDescriptor getgid$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle getgid$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "getgid",
        "()I",
        constants$8.getgid$FUNC, false
    );
    static final FunctionDescriptor getegid$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle getegid$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "getegid",
        "()I",
        constants$8.getegid$FUNC, false
    );
    static final FunctionDescriptor getgroups$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle getgroups$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "getgroups",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$8.getgroups$FUNC, false
    );
    static final FunctionDescriptor setuid$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle setuid$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "setuid",
        "(I)I",
        constants$8.setuid$FUNC, false
    );
}


