// Generated by jextract

package unistd;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$4 {

    static final FunctionDescriptor dup2$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle dup2$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "dup2",
        "(II)I",
        constants$4.dup2$FUNC, false
    );
    static final MemoryLayout __environ$LAYOUT = C_POINTER;
    static final VarHandle __environ$VH = MemoryHandles.asAddressVarHandle(constants$4.__environ$LAYOUT.varHandle(long.class));
    static final MemorySegment __environ$SEGMENT = RuntimeHelper.lookupGlobalVariable(unistd_h.LIBRARIES, "__environ", constants$4.__environ$LAYOUT);
    static final FunctionDescriptor execve$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle execve$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "execve",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$4.execve$FUNC, false
    );
    static final FunctionDescriptor fexecve$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle fexecve$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "fexecve",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$4.fexecve$FUNC, false
    );
    static final FunctionDescriptor execv$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle execv$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "execv",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$4.execv$FUNC, false
    );
    static final FunctionDescriptor execle$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle execle$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "execle",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;[Ljava/lang/Object;)I",
        constants$4.execle$FUNC, true
    );
}


