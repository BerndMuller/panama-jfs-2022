// Generated by jextract

package unistd;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$7 {

    static final FunctionDescriptor __getpgid$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle __getpgid$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "__getpgid",
        "(I)I",
        constants$7.__getpgid$FUNC, false
    );
    static final FunctionDescriptor getpgid$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle getpgid$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "getpgid",
        "(I)I",
        constants$7.getpgid$FUNC, false
    );
    static final FunctionDescriptor setpgid$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle setpgid$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "setpgid",
        "(II)I",
        constants$7.setpgid$FUNC, false
    );
    static final FunctionDescriptor setpgrp$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle setpgrp$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "setpgrp",
        "()I",
        constants$7.setpgrp$FUNC, false
    );
    static final FunctionDescriptor setsid$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle setsid$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "setsid",
        "()I",
        constants$7.setsid$FUNC, false
    );
    static final FunctionDescriptor getsid$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle getsid$MH = RuntimeHelper.downcallHandle(
        unistd_h.LIBRARIES, "getsid",
        "(I)I",
        constants$7.getsid$FUNC, false
    );
}


